name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        if: ${{ steps.changesets.outputs.hasChangesets == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        if: ${{ steps.changesets.outputs.hasChangesets == 'true' }}
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Install dependencies
        if: ${{ steps.changesets.outputs.hasChangesets == 'true' }}
        run: pnpm install

      - name: Build project
        if: ${{ steps.changesets.outputs.hasChangesets == 'true' }}
        run: pnpm build

      - name: zip 'out' directory
        if: ${{ steps.changesets.outputs.hasChangesets == 'true' }}
        run: zip -r out.zip out

      - name: Create Release
        if: ${{ steps.changesets.outputs.hasChangesets == 'true' }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Release created from CI/CD workflow.
            Includes the zipped 'out' directory.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: ${{ steps.changesets.outputs.hasChangesets == 'true' }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out.zip
          asset_name: out.zip
          asset_content_type: application/zip
